version: 2

jobs:
  lint_and_test:
    working_directory: ~/funcake_dags
    docker:
      - image: cimg/python:3.12.3
        auth:
          username: $DOCKERHUB_USER
          password: $DOCKERHUB_PASSWORD
        environment:
          PIPENV_VENV_IN_PROJECT: true
    steps:
      - checkout
      - run: git submodule init; git submodule update
      - run:
          name: 'Install Dependencies'
          command: |
            SLUGIFY_USES_TEXT_UNIDECODE=yes pipenv install --dev

      - run:
          name: 'Check Airflow Constraints'
          command: |
            make compare-dependencies

      - run:
          name: 'Run Pylint'
          command: |
            make lint

      - run:
          name: 'Run Pytest'
          command: |
            make test
  qa_deploy:
    docker:
      - image: cimg/python:3.12.3
        auth:
          username: $DOCKERHUB_USER
          password: $DOCKERHUB_PASSWORD
        environment:
          PIPENV_VENV_IN_PROJECT: true
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints:
            - "96:52:81:94:2a:1f:32:82:cd:b5:2d:e3:e3:9e:9d:08"
      - run:
          name: 'Run Ansible Airflow Playbook for QA'
          command: |
            cd ..
            git clone --single-branch --branch qa https://github.com/tulibraries/ansible-playbook-airflow.git
            cd ansible-playbook-airflow
            pipenv install
            pipenv run ansible-galaxy install -r requirements.yml
            cp .circleci/.vault ~/.vault;
            chmod +x ~/.vault
            pipenv run ansible-playbook -i inventory/qa/hosts playbook.yml  --tags "jumphost,role::airflow::dags" --vault-password-file=~/.vault -e 'ansible_ssh_port=9229'
  prod_deploy:
    docker:
      - image: cimg/python:3.12.3
        auth:
          username: $DOCKERHUB_USER
          password: $DOCKERHUB_PASSWORD
        environment:
          PIPENV_VENV_IN_PROJECT: true
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints:
            - "96:52:81:94:2a:1f:32:82:cd:b5:2d:e3:e3:9e:9d:08"
      - run:
          name: 'Run Ansible Airflow Playbook for Prod'
          command: |
            cd ..
            git clone --single-branch --branch main https://github.com/tulibraries/ansible-playbook-airflow.git
            cd ansible-playbook-airflow
            pipenv install
            pipenv run ansible-galaxy install -r requirements.yml
            cp .circleci/.vault ~/.vault;
            chmod +x ~/.vault
            pipenv run ansible-playbook -i inventory/prod/hosts playbook.yml --tags "jumphost,role::airflow::dags" --vault-password-file=~/.vault -e 'ansible_ssh_port=9229' -e 'funcake_dags_branch=main'

workflows:
  version: 2
  run_tests:
    jobs:
      - lint_and_test
  qa_deploy:
    jobs:
      - qa_deploy:
          filters:
            branches:
              only:
                - main
  prod_deploy:
    jobs:
      - request-prod-deploy:
          type: approval
          filters:
            branches:
              only:
                - main
      - prod_deploy:
          requires:
            - request-prod-deploy
          filters:
            branches:
              only:
                - main
